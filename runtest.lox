// declarations and scoping
var a = "global a";
var b = "global b";
var c = "global c";
{
  var a = "outer a";
  var b = "outer b";
  {
    var a = "inner a";
    print a;
    print b;
    print c;
  }
  print a;
  print b;
  print c;
}
print a;
print b;
print c;


// if-else
if (true or false){
  print "outer if";
  
  if (false and true) print "inner if";
  else print "inner else";
}
else print "outer else";


// loops
var i = 0;
print "while loop";
while (i < 5) {
  print i;
  i = i + 1;
}


print "for loop";
for (var f = 0; f < 5; f = f + 1) {
  print f;
}

// use defined function call
fun sayHi(first, last) {
  print "Hi, " + first + " " + last + "!";
}
sayHi("lil", "coder");
print sayHi;

// function with return value
fun getSum(a, b) {
  print "Adding a and b";
  return a + b;
}
print getSum(10, 20);
print getSum;

// local functions with closure
fun makeCounter() {
  var i = 0;
  fun count() {
    i = i + 1;
    print i;
  }

  return count;
}
var counter = makeCounter();
counter();
counter();
print counter;

// bindings test
var a = "global";
{
  fun showA() {
    print a;
  }

  showA();
  var a = "block";
  showA();
}

// classes test
class TClass {
  meth() {
    print "class method";
  }
}
print TClass;




// MUST BE AT END
// print clock in infinite loop
print "End of program. Now printing seconds for fun";
var time = clock();
while (true) {
 if (clock() != time) {
  time = clock();
  print time;
 }
}
